{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","show","this","setState","Row","className","Col","sm","DropdownButton","id","title","Dropdown","Item","href","Figure","Image","width","alt","src","Caption","style","color","Breadcrumb","active","md","Carousel","ListGroup","Jumbotron","Button","variant","roundedCircle","Form","Group","Control","type","placeholder","Check","label","onClick","handleModal","Modal","onHide","Header","closeButton","Title","Body","Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6f2c78d0.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport './css/bootstrap.min.css';\nimport {\n  DropdownButton, Dropdown, Figure, Row, Col, Breadcrumb, Carousel, ListGroup, Jumbotron, Button, Form, Modal, Image\n} from 'react-bootstrap';\n\nclass App extends Component {\n  constructor(props){\n      super(props);\n      this.state={\n        show: false\n      }\n    }\n  \n    handleModal(){\n        this.setState({show:!this.state.show})\n    }\n\n  render(){\n  return (\n    <div>\n        <Row className=\"table-dark\">\n            <Col sm={3}>\n              <DropdownButton id=\"dropdown-basic-button\" title=\"Pilih Bahasa\">\n                <Dropdown.Item href=\"#/action-1\">Bahasa</Dropdown.Item>\n                <Dropdown.Item href=\"#/action-2\">English</Dropdown.Item>\n              </DropdownButton>\n            </Col>\n            <Col sm={7}></Col>\n            <Col sm={2}>\n              <Figure>\n                <Figure.Image width={50} alt=\"Gambar\" src=\"https://png.pngtree.com/svg/20161113/ef1b24279e.png\" />\n                  <Figure.Caption>\n                    <h6 style={{color: 'white'}}>Alan Saputra</h6>\n                  </Figure.Caption>\n              </Figure>\n            </Col>     \n        </Row>\n        <Row>\n          <Col sm={4}></Col>\n          <Col sm={4}></Col>\n          <Col sm={4}>\n            <Breadcrumb>\n              <Breadcrumb.Item href=\"#\">Home</Breadcrumb.Item>\n              <Breadcrumb.Item href=\"#\">Berita</Breadcrumb.Item>\n              <Breadcrumb.Item active>Bola</Breadcrumb.Item>\n            </Breadcrumb>\n          </Col>\n        </Row>\n\n        <Row>\n            <Col md={2}></Col>\n            <Col>\n                <Carousel>\n                    <Carousel.Item>\n                      <img\n                        className=\"d-block w-100\"\n                        src=\"https://images.performgroup.com/di/library/GOAL/63/7f/sani-rizki-fauzi-indonesia-u-22_4yztc4nehkt61fa7omuyagf71.jpg?t=351764441&quality=60&w=1600\"\n                        alt=\"First slide\"\n                        />\n                      <Carousel.Caption>\n                         <h5>Sani Riszki Fuazi Tegaskan Mental Pemain Timnas Indonesia U-23 tetap Bagus</h5>\n                      </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                      <img\n                        className=\"d-block w-100\"\n                        src=\"https://images.performgroup.com/di/library/GOAL/30/f0/neymar-psg-paris-saint-germain-2018-19_gmakk5891n9c19udcwofmrsgc.jpg?t=-1258742791&quality=60&w=1600\"\n                        alt=\"Second slide\"\n                        />\n                      <Carousel.Caption>\n                        <h5>Neymar Bahas Kontrak Baru Di Paris Saint-Germain</h5>\n                      </Carousel.Caption>\n                    </Carousel.Item>\n                    <Carousel.Item>\n                        <img\n                        className=\"d-block w-100\"\n                        src=\"https://images.performgroup.com/di/library/GOAL/f3/33/england-celebrate-vs-montenegro_e97kv5anpqlq1gr9nc2qaz4ko.jpg?t=-1232521935&quality=60&w=1600\"\n                        alt=\"Third slide\"\n                        />\n                       <Carousel.Caption>\n                          <h5>Inggris Mau Jadi Tim Terbaik Di Dunia</h5>\n                       </Carousel.Caption>\n                    </Carousel.Item>\n                </Carousel>\n            </Col>\n            <Col md={2}></Col>\n        </Row><br />\n\n        <Row>\n          <Col sm={3}>\n            <ListGroup>\n                <ListGroup.Item active>Liga 1 Indonesia</ListGroup.Item>\n                <ListGroup.Item>Liga Primer Inggris</ListGroup.Item>\n                <ListGroup.Item>Divisi Primera</ListGroup.Item>\n                <ListGroup.Item>Serie A</ListGroup.Item>\n                <ListGroup.Item>Ligue 1</ListGroup.Item>\n                <ListGroup.Item>Bundes Liga</ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col>\n            <Jumbotron>\n              <h1>DIVISI PRIMERA</h1>\n              <p>Main Untuk Catalunya, Gerard Pique Minta Dihormati</p>\n              <Button variant=\"primary\">Read More</Button>\n            </Jumbotron>\n          </Col>\n          <Col sm={3}>\n            <center>\n              <Image src=\"https://i.ibb.co/qrW616v/login.png\" style={{ width: '60px' }}  roundedCircle  />\n              <h4>Silahkan Login</h4>\n              </center>\n              <br />\n              <Form>\n                  <Form.Group>\n                      <Form.Control type=\"email\" placeholder=\"Masukan Email\" />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Control type=\"password\" placeholder=\"Password\" />\n                  </Form.Group>\n                  <Form.Group>\n                      <Form.Check type=\"checkbox\" label=\"Term & Condition\" />\n                  </Form.Group>\n\n                <div>\n                    <Button onClick={()=>{this.handleModal()}}>Login</Button>\n                        <Modal show={this.state.show} onHide={()=>this.handleModal()}>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Login</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <p>Anda Berhasil Login</p>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <Button onClick={()=>{this.handleModal()}} variant=\"secondary\">Close</Button>\n                                <Button onClick={()=>{this.handleModal()}} variant=\"primary\">Save Username & Password</Button>\n                            </Modal.Footer>\n                        </Modal>\n                </div>\n              </Form>\n          </Col>\n        </Row>          \n    </div>\n  )\n}\n}\n\nexport default App\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}